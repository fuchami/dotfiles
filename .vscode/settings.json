{
    "editor.wordSeparators": "./\\()\"'-:,.;<>~!@#$%^&*|+=[]{}`~?　、。「」【】『』（）！？てにをはがのともへでや",
    "latex-workshop.latex.tools": [
        // latexmk を利用した uplatex によるビルドコマンド
        {
          "name": "Latexmk (upLaTeX)",
          "command": "latexmk",
          "args": [
            "-f", "-gg", "-synctex=1", "-interaction=nonstopmode", "-file-line-error", "%DOC%"
          ]
        },
        // latexmk を利用した platex によるビルドコマンド
        // 古い LaTeX のテンプレートを使いまわしている (ドキュメントクラスが jreport や jsreport ) 場合のため
        {
          "name": "Latexmk (pLaTeX)",
          "command": "latexmk",
          "args": [
            "-f", "-gg", "-pv", "-latex='platex'", "-latexoption='-kanji=utf8 -no-guess-input-env'", "-synctex=1", "-interaction=nonstopmode", "-file-line-error", "%DOC%"
          ]
        },
    ],

    // latex-workshop.latex.recipes: Recipe の定義
    "latex-workshop.latex.recipes": [
        // LaTeX(upLaTeX) で書かれた文書のビルドレシピ
        {
          "name": "upLaTeX",
          "tools": [
            "Latexmk (upLaTeX)"
          ]
        },
        // LaTeX(pLaTeX) で書かれた文書のビルドレシピ
        {
          "name": "pLaTeX",
          "tools": [
            "Latexmk (pLaTeX)"
          ]
        },
    ],

    // latex-workshop.latex.magic.args: マジックコメント付きの LaTeX ドキュメントをビルドする設定
    // '%!TEX' で始まる行はマジックコメントと呼ばれ、LaTeX のビルド時にビルドプログラムに解釈され、
    // プログラムの挙動を制御する事ができる。
    // 参考リンク: https://blog.miz-ar.info/2016/11/magic-comments-in-tex/
    "latex-workshop.latex.magic.args": [
      "-f", "-gg", "-pv", "-synctex=1", "-interaction=nonstopmode", "-file-line-error", "%DOC%"
    ],

    // latex-workshop.latex.clean.fileTypes: クリーンアップ時に削除されるファイルの拡張子
    // LaTeX 文書はビルド時に一時ファイルとしていくつかのファイルを生成するが、最終的に必要となるのは
    // PDF ファイルのみである場合などが多い。また、LaTeX のビルド時に失敗した場合、失敗時に生成された
    // 一時ファイルの影響で、修正後のビルドに失敗してしまう事がよくある。そのため、一時的なファイルを
    // 削除する機能 (クリーンアップ) が LaTeX Workshop には備わっている。
    "latex-workshop.latex.clean.fileTypes": [
        "*.aux", "*.bbl", "*.blg", "*.idx", "*.ind", "*.lof", "*.lot", "*.out", "*.toc", "*.acn", "*.acr", "*.alg", "*.glg", "*.glo", "*.gls", "*.ist", "*.fls", "*.log", "*.fdb_latexmk", "*.synctex.gz",
        // for Beamer files
        "_minted*", "*.nav", "*.snm", "*.vrb",
    ],

    // latex-workshop.view.pdf.viewer: PDF ビューアの開き方
    // VSCode 自体には PDF ファイルを閲覧する機能が備わっていないが、
    // LaTeX Workshop にはその機能が備わっている。
    // "tab" オプションを指定すると、今開いているエディタを左右に分割し、右側に生成されたPDFを表示するようにしてくれる
    // この PDF ビュアーは LaTeX のビルドによって更新されると同期して内容を更新してくれる。
    "latex-workshop.view.pdf.viewer": "tab",

    // フォントの設定
    "editor.fontFamily": "'Source Han Code JP',Menlo, Monaco, monospace", 
    // フォントのサイズ
    "editor.fontSize": 14,
    // テーマの設定
    "workbench.colorTheme": "Monokai Dimmed",

    // Git 実行可能ファイルのパス
    "git.path": "/usr/bin/git",
    
    // vim 関連

    // 言語ごとの設定
    "editor.tabSize": 2,
    "[python]": {
        "editor.tabSize": 4
    },
    "workbench.colorCustomizations": {
        "statusBar.background": "#ba2d65",
        "statusBar.noFolderBackground": "#ba2d65",
        "statusBar.debuggingBackground": "#ba2d65"
    },
    "gitlens.advanced.messages": {
      "suppressLineUncommittedWarning": true,
      "suppressShowKeyBindingsNotice": true
    },
    "window.zoomLevel": 0,
    "workbench.iconTheme": "material-icon-theme",

    "auto-close-tag.activationOnLanguage": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "markdown",
        "vue",
        "liquid",
        "erb",
        "HTML (Eex)",
        "ruby"
    ],
    "breadcrumbs.enabled": true,
    "workbench.startupEditor": "welcomePage",
    "editor.largeFileOptimizations": false,
    "python.dataScience.sendSelectionToInteractiveWindow": true,
    "terminal.integrated.inheritEnv": false,
    "python.dataScience.askForKernelRestart": false,
    "latex-workshop.view.pdf.viewer": "tab",
    "git.ignoreMissingGitWarning": true,
    "python.pythonPath": "/usr/local/bin/python3",
    "explorer.confirmDelete": false

}